# name: test/sql/aggregate/group/test_group_by.test
# description: Test aggregation/group by statements
# group: [group]
# Ignored: https://issues.apache.org/jira/browse/IGNITE-14885
# Ignored: https://issues.apache.org/jira/browse/IGNITE-15539

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE test (a INTEGER, b INTEGER);

statement ok
INSERT INTO test VALUES (11, 22), (13, 22), (12, 21)

# group by alias
query IR
SELECT b % 2 AS f, SUM(a) FROM test GROUP BY f;
----
0	24.000000
1	12.000000

# group by with filter
query IRIR
SELECT b, SUM(a), COUNT(*), SUM(a+2) FROM test WHERE a <= 12 GROUP BY b ORDER BY b;
----
21	12.000000	1	14.000000
22	11.000000	1	13.000000

# nested aggregate in group by
statement error
SELECT b % 2 AS f, COUNT(SUM(a)) FROM test GROUP BY f;

statement ok
INSERT INTO test VALUES (12, 21), (12, 21), (12, 21)

# group by with filter and multiple values per groups
query IRIR
SELECT b, SUM(a), COUNT(*), SUM(a+2) FROM test WHERE a <= 12 GROUP BY b ORDER BY b;
----
21	48.000000	4	56.000000
22	11.000000	1	13.000000

# group by with filter and multiple values per groups
statement ok
CREATE TABLE integers(i INTEGER, j INTEGER);

statement ok
INSERT INTO integers VALUES (3, 4), (3, 4), (2, 4);

# group by constant alias
query IR
SELECT 1 AS k, SUM(i) FROM integers GROUP BY k ORDER BY 2;
----
1	8.000000

# refer to the same alias twice
query IR
SELECT i % 2 AS k, SUM(i) FROM integers GROUP BY k, k ORDER BY 1;
----
0	2.000000
1	6.000000

statement ok
DROP TABLE integers;

statement ok
CREATE TABLE integers(i INTEGER);

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL);

# group by column refs should be recognized, even if one uses an explicit table specifier and the other does not
query IR
SELECT test.b, SUM(a) FROM test GROUP BY b ORDER BY COUNT(a) DESC;
----
21	48.000000
22	24.000000

